
import prettytable
import re
from PyQt5.QtWidgets import QApplication
def u(x):
    return str(x)
if True:  #here just to achieve the indent
    if True:
# ----- Cut below ---------------------------------------------

        # autogenerated help pasted below

        newline = "\n"  #@UnusedVariable
        helpstr = ""
        helpstr += "<head><style>"
        helpstr += "td, th {border: 1px solid #ddd;  padding: 6px;}"
        helpstr += "th {padding-top: 6px;padding-bottom: 6px;text-align: left;background-color: #0C6AA6; color: white;}"
        helpstr += "</style></head>"
        helpstr += "<body>"
        helpstr += "<b>" + u(QApplication.translate('HelpDlg','ALARMS',None)) + "</b>"
        tbl_Alarmstop = prettytable.PrettyTable()
        tbl_Alarmstop.header = False
        tbl_Alarmstop.add_row([u(QApplication.translate('HelpDlg','Each alarm is only triggered once.',None))])
        helpstr += tbl_Alarmstop.get_html_string(attributes={"width":"100%","border":"1","padding":"1","border-collapse":"collapse"})
        tbl_Alarms = prettytable.PrettyTable()
        tbl_Alarms.field_names = [u(QApplication.translate('HelpDlg','Field',None)),u(QApplication.translate('HelpDlg','Description',None))]
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Nr',None)),u(QApplication.translate('HelpDlg','Alarm number for reference',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Status',None)),u(QApplication.translate('HelpDlg','Activate or Deactivate the alarm',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','If Alarm',None)),u(QApplication.translate('HelpDlg','Alarm triggered only if the alarm with the given number was triggered before. Use 0 for no guard.',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','But Not',None)),u(QApplication.translate('HelpDlg','Alarm triggered only if the alarm with the given number was not triggered before. Use 0 for no guard.',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','From',None)),u(QApplication.translate('HelpDlg','Alarm only triggered after the given event',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Time',None)),u(QApplication.translate('HelpDlg','If not 00:00, alarm is triggered mm:ss after the event "From" happened',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Source',None)),u(QApplication.translate('HelpDlg','The observed temperature source',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Condition',None)),u(QApplication.translate('HelpDlg','Alarm is triggered if source rises above or below the specified temperature',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Temp',None)),u(QApplication.translate('HelpDlg','The specified temperature limit',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Action',None)),u(QApplication.translate('HelpDlg','The action to be triggered if all conditions are fulfilled',None))])
        tbl_Alarms.add_row([u(QApplication.translate('HelpDlg','Description',None)),u(QApplication.translate('HelpDlg','The text of the popup, the name of the program, the number of the event button, the new value of the slider or the program to call',None))])
        helpstr += tbl_Alarms.get_html_string(attributes={"width":"100%","border":"1","padding":"1","border-collapse":"collapse"})
        helpstr += "</body>"
        helpstr = re.sub(r"&amp;#160;", r"&#160;",helpstr)

        # autogenerated help pasted above

# ----- Cut above ---------------------------------------------
outfile = open('../output_files/alarms.html','w')
outfile.write(helpstr)
outfile.close()
outfile = open('../output_files/help.html','w')
outfile.write(helpstr)
outfile.close()